darina@MacBook-Pro ~ % psql -h localhost -p 5432 -U postgres -d postgres
Password for user postgres:
psql (14.19 (Homebrew), server 17.6)
WARNING: psql major version 14, server major version 17.
         Some psql features might not work.
Type "help" for help.

postgres=# CREATE TABLE students (
    student_id INTEGER PRIMARY KEY,
    name VARCHAR(100),
    email VARCHAR(150)
);
CREATE TABLE
postgres=# DROP TABLE students;
DROP TABLE
postgres=# CREATE TABLE students (
    student_id INTEGER,
    name VARCHAR(100),
    email VARCHAR(150),
    PRIMARY KEY (student_id)
);
CREATE TABLE
postgres=# DROP TABLE students;
DROP TABLE
postgres=# CREATE TABLE students (
    student_id INTEGER,
    name VARCHAR(100),
    email VARCHAR(150),
    CONSTRAINT pk_students PRIMARY KEY (student_id)
);
CREATE TABLE
postgres=# DROP TABLE students;
DROP TABLE
postgres=# CREATE TABLE students (
    student_id INTEGER,
    name VARCHAR(100),
    email VARCHAR(150)
);
CREATE TABLE
postgres=# ALTER TABLE students ADD CONSTRAINT pk_students PRIMARY KEY (student_id);
ALTER TABLE
postgres=# DROP TABLE students;
DROP TABLE
postgres=# CREATE TABLE students (
    student_id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(150) UNIQUE,
    faculty VARCHAR(50)
);
CREATE TABLE
postgres=# INSERT INTO students (name, email, faculty) VALUES
('Alice Johnson', 'alice@alatoo.edu.kg', 'Computer Science'),
('Bob Smith', 'bob@alatoo.edu.kg', 'Mathematics'),
('Carol Davis', 'carol@alatoo.edu.kg', 'Computer Science');
INSERT 0 3
postgres=# SELECT * FROM students;
 student_id |     name      |        email        |     faculty
------------+---------------+---------------------+------------------
          1 | Alice Johnson | alice@alatoo.edu.kg | Computer Science
          2 | Bob Smith     | bob@alatoo.edu.kg   | Mathematics
          3 | Carol Davis   | carol@alatoo.edu.kg | Computer Science
(3 rows)
postgres=# DROP TABLE students;
DROP TABLE
postgres=# CREATE TABLE course_enrollments (
    student_id INTEGER,
    course_id INTEGER,
    semester VARCHAR(20),
    enrollment_date DATE DEFAULT CURRENT_DATE,
    grade CHAR(2),
    PRIMARY KEY (student_id, course_id, semester)
);
CREATE TABLE
postgres=# INSERT INTO course_enrollments (student_id, course_id, semester, grade) VALUES
(1, 101, '2024-Spring', 'A'),
(1, 102, '2024-Spring', 'B+'),
(2, 101, '2024-Spring', 'A-'),
(1, 101, '2024-Fall', 'A+');
INSERT 0 4
postgres=# SELECT * FROM course_enrollments;
 student_id | course_id |  semester   | enrollment_date | grade
------------+-----------+-------------+-----------------+-------
          1 |       101 | 2024-Spring | 2025-09-04      | A
          1 |       102 | 2024-Spring | 2025-09-04      | B+
          2 |       101 | 2024-Spring | 2025-09-04      | A-
          1 |       101 | 2024-Fall   | 2025-09-04      | A+
(4 rows)

postgres=# CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name VARCHAR(100) NOT NULL,
    price DECIMAL(10,2)
);
CREATE TABLE
postgres=# DROP TABLE products;
DROP TABLE
postgres=# CREATE TABLE transactions (
    transaction_id BIGSERIAL PRIMARY KEY,  -- Can handle very large numbers
    amount DECIMAL(15,2),
postgres(# transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE
postgres=# DROP TABLE transactions;
DROP TABLE
postgres=# CREATE TABLE orders (
    order_id INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    customer_name VARCHAR(100),
    order_date DATE DEFAULT CURRENT_DATE
);
CREATE TABLE
postgres=# SELECT * FROM orders;
 order_id | customer_name | order_date
----------+---------------+------------
(0 rows)

postgres=# DROP TABLE orders;
DROP TABLE
postgres=# CREATE TABLE customers (
    customer_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    customer_name VARCHAR(100),
    email VARCHAR(150)
);
CREATE TABLE
postgres=# DROP TABLE customers;
DROP TABLE
postgres=# CREATE TABLE customers (
    customer_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    customer_name VARCHAR(100),
    email VARCHAR(150)
);
CREATE TABLE
postgres=# INSERT INTO customers (customer_id, customer_name, email)
postgres-# VALUES (1000, 'VIP Customer', 'vip@example.com');
INSERT 0 1
postgres=# SELECT * FROM customers;
 customer_id | customer_name |      email
-------------+---------------+-----------------
        1000 | VIP Customer  | vip@example.com
(1 row)

postgres=# DROP TABLE customers;
DROP TABLE
postgres=# CREATE TABLE departments (
    dept_id INTEGER PRIMARY KEY,
    dept_name VARCHAR(100)
);
CREATE TABLE
postgres=# INSERT INTO departments VALUES (1, 'Computer Science');
INSERT 0 1
postgres=# INSERT INTO departments VALUES (1, 'Mathematics');
ERROR:  duplicate key value violates unique constraint "departments_pkey"
DETAIL:  Key (dept_id)=(1) already exists.
postgres=# INSERT INTO departments VALUES (NULL, 'Physics');
ERROR:  null value in column "dept_id" of relation "departments" violates not-null constraint
DETAIL:  Failing row contains (null, Physics).
postgres=# \d departments
                     Table "public.departments"
  Column   |          Type          | Collation | Nullable | Default
-----------+------------------------+-----------+----------+---------
 dept_id   | integer                |           | not null |
 dept_name | character varying(100) |           |          |
Indexes:
    "departments_pkey" PRIMARY KEY, btree (dept_id)

postgres=#